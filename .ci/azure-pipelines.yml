trigger:
  - master

jobs:
  - job: linux

    pool:
      vmImage: "ubuntu-16.04"

    strategy:
      matrix:
        "py27-np13":
          python.version: "2.7"
          python.architecture: "x64"
          numpy.version: "1.13.1"
        "py27-np*":
          python.version: "2.7"
          python.architecture: "x64"
          numpy.version: "latest"
        "py35-np13":
          python.version: "3.5"
          python.architecture: "x64"
          numpy.version: "1.13.1"
        "py35-np*":
          python.version: "3.5"
          python.architecture: "x64"
          numpy.version: "latest"
        "py37-np*":
          python.version: "3.7"
          python.architecture: "x64"
          numpy.version: "latest"

    steps:
      - checkout: self
        submodules: recursive

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: '$(python.architecture)'
        displayName: 'Python $(python.version)'

      - script: |
          sudo apt install -y build-essential cmake make tree
          python -m pip install --update pip
          if [ $(numpy.version) = "latest" ]; then
            pip install -r requirements.txt;
          else
            sed 's/numpy>=1.13.1/numpy==$(numpy.version)/' requirements.txt > requirements2.txt;
            pip install -r requirements2.txt;
          fi
          pip install -r test-requirements.txt
          python -c "import numpy; print(numpy.__version__)"
        displayName: "Install"

      - script: |
          python setup.py build
          tree -I pybind11
          cd build/lib.*
          ln -s ../../tests
          ls -a
          pytest -vv tests
        displayName: "Build and test"
